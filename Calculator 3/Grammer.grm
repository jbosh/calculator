"Name"     = Calculator

"Start Symbol" = <Statement>
"Auto Whitespace" = True

! ------------------------------------------------- Sets


! ------------------------------------------------- Terminals
![{Letter}|{Printable Extended}][{Digit}{Letter}|{Printable Extended}]*
!{ReadableUnicode} = {&0100 .. &D7FF} + {&DC00 .. &FFF0}
{ReadableUnicode} = {&0200 .. &0400} + {&2603}
Id = ({Letter}|{Printable Extended}|{ReadableUnicode}|_)({Digit}|{Letter}|{Printable Extended}|{ReadableUnicode}|_)*
Double = {Digit}+ '.' {Digit}*
    | '.' {Digit}+  
    | {Digit}+

    | {Digit}+ 'E' {Digit}+
    | {Digit}+ 'E' '.' {Digit}+
    | {Digit}+ 'E' {Digit}+ '.' {Digit}*

    | '.' {Digit}+ 'E' {Digit}+
    | '.' {Digit}+ 'E' '.' {Digit}+
    | '.' {Digit}+ 'E' {Digit}+ '.' {Digit}*

    | {Digit}+ '.' {Digit}* 'E' {Digit}+
    | {Digit}+ '.' {Digit}* 'E' '.' {Digit}+
    | {Digit}+ '.' {Digit}* 'E' {Digit}+ '.' {Digit}*

    | {Digit}+ 'E' '-' {Digit}+
    | {Digit}+ 'E' '-' '.' {Digit}+
    | {Digit}+ 'E' '-' {Digit}+ '.' {Digit}*

    | '.' {Digit}+ 'E' '-' {Digit}+
    | '.' {Digit}+ 'E' '-' '.' {Digit}+
    | '.' {Digit}+ 'E' '-' {Digit}+ '.' {Digit}*

    | {Digit}+ '.' {Digit}* 'E' '-' {Digit}+
    | {Digit}+ '.' {Digit}* 'E' '-' '.' {Digit}+
    | {Digit}+ '.' {Digit}* 'E' '-' {Digit}+ '.' {Digit}*
    
    | {Digit}+ 'e' {Digit}+
    | {Digit}+ 'e' '.' {Digit}+
    | {Digit}+ 'e' {Digit}+ '.' {Digit}*

    | '.' {Digit}+ 'e' {Digit}+
    | '.' {Digit}+ 'e' '.' {Digit}+
    | '.' {Digit}+ 'e' {Digit}+ '.' {Digit}*

    | {Digit}+ '.' {Digit}* 'e' {Digit}+
    | {Digit}+ '.' {Digit}* 'e' '.' {Digit}+
    | {Digit}+ '.' {Digit}* 'e' {Digit}+ '.' {Digit}*

    | {Digit}+ 'e' '-' {Digit}+
    | {Digit}+ 'e' '-' '.' {Digit}+
    | {Digit}+ 'e' '-' {Digit}+ '.' {Digit}*

    | '.' {Digit}+ 'e' '-' {Digit}+
    | '.' {Digit}+ 'e' '-' '.' {Digit}+
    | '.' {Digit}+ 'e' '-' {Digit}+ '.' {Digit}*

    | {Digit}+ '.' {Digit}* 'e' '-' {Digit}+
    | {Digit}+ '.' {Digit}* 'e' '-' '.' {Digit}+
    | {Digit}+ '.' {Digit}* 'e' '-' {Digit}+ '.' {Digit}*
Hex = '0x'[ABCDEFabcdef0123456789]+
Binary = '0b'[10]+

! ------------------------------------------------- Rules
<Statement> ::= <Ternary Expression>
              | Id '=' <Ternary Expression>

<Ternary Expression> ::= <Logical Expression> '?' <Ternary Expression> ':' <Ternary Expression>
                       | <Logical Expression>

<Logical Expression> ::= <Logical Expression> '&' <Compare Expression>
                       | <Logical Expression> '|' <Compare Expression>
                       | <Logical Expression> '^' <Compare Expression>
                       | <Compare Expression>

<Compare expression> ::= <Compare Expression> '<' <Shift Expression>
                       | <Compare Expression> '<=' <Shift Expression>
                       | <Compare Expression> '>' <Shift Expression>
                       | <Compare Expression> '>=' <Shift Expression>
                       | <Compare Expression> '==' <Shift Expression>
                       | <Compare Expression> '!=' <Shift Expression>
                       | <Shift Expression>
                                             
<Shift Expression> ::= <Shift Expression> '<<' <Expression> 
                     | <Shift Expression> '>>' <Expression>
                     | <Expression>

<Expression> ::= <Expression> '+' <Op Exp> 
               | <Expression> '-' <Op Exp> 
               | <Op Exp> 

<Op Exp> ::= <Op Exp> '*' <Pow Exp> 
           | <Op Exp> '/' <Pow Exp>
           | <Op Exp> '%' <Pow Exp>
           | <Pow Exp>

<Pow Exp> ::= <Pow Exp> '**' <Negate Exp>
            | <Negate Exp>

<Negate Exp>  ::= '~' <Negate Exp>
                | '-' <Negate Exp> 
                | <Factorial>

<Factorial> ::= <Factorial> '!'
              | <Function>

<Function> ::= ID <Function>
             | <Value With Units>

<Value With Units> ::= '[<' <Unit Expression> '>]'
                     | Double '[<' <Unit Expression> '>]'
                     | Hex '[<' <Unit Expression> '>]'
                     | Binary '[<' <Unit Expression> '>]'
                     | <Value>

<Value> ::= Double
          | '(' <Ternary Expression> ')'
          | Hex
          | ID
          | Binary
          | <Vector Expression>

<Vector Expression> ::= '{' <Expression List> '}'

<Expression List> ::= <Expression List> ';' <Ternary Expression>
                    | <Ternary Expression>


! ------------------------------------------------- Units grammar
<Unit Expression> ::= <Unit Op Exp>

<Unit Op Exp> ::= <Unit Op Exp> '*' <Unit Pow Exp>
                | <Unit Op Exp> '/' <Unit Pow Exp>
                | <Unit Pow Exp>

<Unit Pow Exp> ::= <Unit Value> '**' Double
                 | <Unit Value> '^' Double
                 | <Unit Value> '**' '-' Double
                 | <Unit Value> '^' '-' Double
                 | <Unit Value>

<Unit Value> ::= Double
               | ID
               | '(' <Unit Op Exp> ')'
